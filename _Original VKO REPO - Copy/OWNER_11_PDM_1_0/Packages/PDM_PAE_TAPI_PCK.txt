create or replace PACKAGE pdm_pae_tapi_pck
IS
-- Table API package for table pdm_packages
-- Generated by VI TAPI generator version 6.2  (TAPI generated 03-Jan-2022  05:40:59)

-- Generated global constants
g_con_pack        CONSTANT     VARCHAR2(30) := 'PDM_PAE_TAPI_PCK';
g_con_table_name  CONSTANT     VARCHAR2(61) := 'PDM_PACKAGES';
g_lock_conflicts  PLS_INTEGER := 0;


FUNCTION pae_select_row( i_pae_ID   IN  pdm_packages.ID%TYPE
                       , o_rt_pae   OUT pdm_packages%ROWTYPE )
RETURN BOOLEAN
;

FUNCTION pae_select_row_upd( i_pae_ID   IN  pdm_packages.ID%TYPE
                           , o_rt_pae   OUT pdm_packages%ROWTYPE )
RETURN BOOLEAN
;

PROCEDURE pae_lock_row( i_pae_ID   IN  pdm_packages.ID%TYPE )
;

PROCEDURE pae_lock_row_nowait( i_pae_ID   IN  pdm_packages.ID%TYPE )
;

PROCEDURE pae_insert_row ( io_rt_pae  IN OUT pdm_packages%ROWTYPE )
;

FUNCTION pae_update_row( i_pae_ID   IN     pdm_packages.ID%TYPE
                       , io_rt_pae  IN OUT pdm_packages%ROWTYPE )
RETURN NUMBER
;

FUNCTION pae_delete_row( i_pae_ID   IN  pdm_packages.ID%TYPE )
RETURN BOOLEAN
;

FUNCTION pae_seq1_nextval
RETURN pdm_packages.ID%TYPE
;


END pdm_pae_tapi_pck;
/




package body pdm_pae_tapi_pck
is




function pae_select_row( i_pae_id   in  pdm_packages.id%type
                       , o_rt_pae   out pdm_packages%rowtype )
return boolean
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_select_row';
   l_found                boolean      := false;
begin
   declare
      cursor c_pae ( i_pae_id   in  pdm_packages.id%type )
      is 
           select *
             from pdm_packages pae
            where pae.id = i_pae_id ;
   begin                                                         
      viu_module.enter_module( i_module => con_proc );

      begin
         open c_pae( i_pae_id => i_pae_id );
         fetch c_pae into o_rt_pae;
         l_found := c_pae%found;
         close c_pae;
      end;

      viu_module.leave_module( i_module     => con_proc 
                             , i_debug_info => case l_found when true then 'found' else 'notfound' end );

      return l_found;

   exception
      when others
      then
         if c_pae%isopen
         then
            close c_pae;
         end if;

         viu_module.leave_module( i_module     => con_proc
                                , i_debug_info => sqlerrm );

         viu_info.raise_info( i_calling_procedure => con_proc );
   end;                                                          
end pae_select_row;

function pae_select_row_upd( i_pae_id   in  pdm_packages.id%type
                           , o_rt_pae   out pdm_packages%rowtype )
return boolean
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_select_row_upd';
   l_found                boolean      := false;

   cursor c_pae ( i_pae_id   in  pdm_packages.id%type )
   is
           select *
             from pdm_packages pae
            where pae.id = i_pae_id 
         for update;
begin
   viu_module.enter_module( i_module => con_proc );

   
   open c_pae( i_pae_id => i_pae_id );
   fetch c_pae into o_rt_pae;
   l_found := c_pae%found;
   close c_pae;

   viu_module.leave_module( i_module     => con_proc
                          , i_debug_info => case l_found when true then 'found' else 'notfound' end );

   return l_found;

exception
   when others
   then
      if c_pae%isopen
      then
         close c_pae;
      end if;

      viu_module.leave_module( i_module     => con_proc
                             , i_debug_info => sqlerrm );

      viu_info.raise_info( i_calling_procedure => con_proc );

end pae_select_row_upd;

procedure pae_lock_row( i_pae_id   in  pdm_packages.id%type )
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_lock_row';
begin
  declare
     cursor c_pae ( i_pae_id   in  pdm_packages.id%type )
     is
             select ''
               from pdm_packages pae
              where pae.id = i_pae_id 
         for update;

   begin                                                         
      viu_module.enter_module(i_module => con_proc);

      begin
         
         if i_pae_id is not null
         then
            begin
                
                pae_lock_row_nowait( i_pae_id => i_pae_id );
            exception
               when viu_constant.exc_lockfailed
               then
                  
                  g_lock_conflicts := g_lock_conflicts + 1;

                  
                  viu_info.reset_package_variables;

                  
                  open c_pae( i_pae_id => i_pae_id );
                  close c_pae;
               end;
         end if;
      end;

      viu_module.leave_module( i_module => con_proc );

   exception
      when others
      then
         if c_pae%isopen
         then
            close c_pae;
         end if;

         viu_module.leave_module( i_module     => con_proc
                                , i_debug_info => sqlerrm );

         viu_info.raise_info(i_calling_procedure => con_proc );
   end;                                                          
end pae_lock_row;

procedure pae_lock_row_nowait( i_pae_id   in  pdm_packages.id%type )
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_lock_row_nowait';
begin
   declare
      cursor c_pae ( i_pae_id   in  pdm_packages.id%type )
      is
              select ''
                from pdm_packages pae
               where pae.id = i_pae_id 
          for update nowait;

   begin                                                         
      viu_module.enter_module(i_module => con_proc);

      begin

         
         if i_pae_id is not null
         then
            
            open c_pae( i_pae_id => i_pae_id );

            close c_pae;
         end if;
      end;

      viu_module.leave_module( i_module => con_proc );

   exception
      when others
      then
        if c_pae%isopen
        then
           close c_pae;
        end if;

        viu_module.leave_module( i_module     => con_proc
                               , i_debug_info => sqlerrm );

        viu_info.raise_info( i_ifo_nr            => viu_constant.c_ifo_lockfailed
                           , i_calling_procedure => con_proc
                           , i_severity          => viu_info.c_severity_error
                           , i_info_arguments    => g_con_table_name
                           , i_additional_data   =>   'ID = "'||i_pae_id||'"' );
   end;                                                          
end pae_lock_row_nowait;

function pae_perform_update( i_pae_id   in     pdm_packages.id%type
                           , io_rt_pae  in out pdm_packages%rowtype )
return number
;

function pae_perform_delete( i_pae_id   in  pdm_packages.id%type )
return boolean
;

procedure pae_insert_row ( io_rt_pae  in out pdm_packages%rowtype )
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_insert_row';
begin
   begin                                                         
      viu_module.enter_module(i_module => con_proc);

      
      begin
         insert into pdm_packages( id
                                , pi_id
                                , place_of_birth
                                , pte_id
                                , status
                                , ind_match
                                , ind_match_time
                                , ind_match_hdl_time
                                , ind_match_hdl_psn
                                , ind_ready
                                , ind_packagedata_deleted
                                , ind_packagedata_multiple
                                , ind_ghost
                                , ind_chosen
                                , ind_consider_multi_read
                                , pty_id
                                , pd_id
                                , bagdata_id
                                , nof_bagdata
                                , pid
                                , last_ti_sent_time
                                , count_suspect_ti_sent
                                , rematch_time
                                , date_created
                                , date_last_event
                                , date_modified
                                , date_registered
                                , date_deregistered
                                , date_obsolete
                                , date_bagdata_updated )
              values ( io_rt_pae.id
                     , io_rt_pae.pi_id
                     , io_rt_pae.place_of_birth
                     , io_rt_pae.pte_id
                     , io_rt_pae.status
                     , io_rt_pae.ind_match
                     , io_rt_pae.ind_match_time
                     , io_rt_pae.ind_match_hdl_time
                     , io_rt_pae.ind_match_hdl_psn
                     , io_rt_pae.ind_ready
                     , io_rt_pae.ind_packagedata_deleted
                     , io_rt_pae.ind_packagedata_multiple
                     , io_rt_pae.ind_ghost
                     , io_rt_pae.ind_chosen
                     , io_rt_pae.ind_consider_multi_read
                     , io_rt_pae.pty_id
                     , io_rt_pae.pd_id
                     , io_rt_pae.bagdata_id
                     , io_rt_pae.nof_bagdata
                     , io_rt_pae.pid
                     , io_rt_pae.last_ti_sent_time
                     , io_rt_pae.count_suspect_ti_sent
                     , io_rt_pae.rematch_time
                     , io_rt_pae.date_created
                     , io_rt_pae.date_last_event
                     , io_rt_pae.date_modified
                     , io_rt_pae.date_registered
                     , io_rt_pae.date_deregistered
                     , io_rt_pae.date_obsolete
                     , io_rt_pae.date_bagdata_updated )
           returning id
                   , pi_id
                   , place_of_birth
                   , pte_id
                   , status
                   , ind_match
                   , ind_match_time
                   , ind_match_hdl_time
                   , ind_match_hdl_psn
                   , ind_ready
                   , ind_packagedata_deleted
                   , ind_packagedata_multiple
                   , ind_ghost
                   , ind_chosen
                   , ind_consider_multi_read
                   , pty_id
                   , pd_id
                   , bagdata_id
                   , nof_bagdata
                   , pid
                   , last_ti_sent_time
                   , count_suspect_ti_sent
                   , rematch_time
                   , date_created
                   , date_last_event
                   , date_modified
                   , date_registered
                   , date_deregistered
                   , date_obsolete
                   , date_bagdata_updated
                into io_rt_pae.id
                   , io_rt_pae.pi_id
                   , io_rt_pae.place_of_birth
                   , io_rt_pae.pte_id
                   , io_rt_pae.status
                   , io_rt_pae.ind_match
                   , io_rt_pae.ind_match_time
                   , io_rt_pae.ind_match_hdl_time
                   , io_rt_pae.ind_match_hdl_psn
                   , io_rt_pae.ind_ready
                   , io_rt_pae.ind_packagedata_deleted
                   , io_rt_pae.ind_packagedata_multiple
                   , io_rt_pae.ind_ghost
                   , io_rt_pae.ind_chosen
                   , io_rt_pae.ind_consider_multi_read
                   , io_rt_pae.pty_id
                   , io_rt_pae.pd_id
                   , io_rt_pae.bagdata_id
                   , io_rt_pae.nof_bagdata
                   , io_rt_pae.pid
                   , io_rt_pae.last_ti_sent_time
                   , io_rt_pae.count_suspect_ti_sent
                   , io_rt_pae.rematch_time
                   , io_rt_pae.date_created
                   , io_rt_pae.date_last_event
                   , io_rt_pae.date_modified
                   , io_rt_pae.date_registered
                   , io_rt_pae.date_deregistered
                   , io_rt_pae.date_obsolete
                   , io_rt_pae.date_bagdata_updated;

      exception
         when others
         then
            viu_info.raise_info( i_ifo_nr            => viu_constant.c_ifo_insertfailed
                               , i_calling_procedure => con_proc
                               , i_severity          => viu_info.c_severity_error
                               , i_info_arguments    => g_con_table_name
                               , i_additional_data   => substr('ID = "'||io_rt_pae.id||'"'
                                                             ||', PI_ID = "'||io_rt_pae.pi_id||'"'
                                                             ||', PLACE_OF_BIRTH = "'||io_rt_pae.place_of_birth||'"'
                                                             ||', PTE_ID = "'||io_rt_pae.pte_id||'"'
                                                             ||', STATUS = "'||io_rt_pae.status||'"'
                                                             ||', IND_MATCH = "'||io_rt_pae.ind_match||'"'
                                                             ||', IND_MATCH_TIME = "'||io_rt_pae.ind_match_time||'"'
                                                             ||', IND_MATCH_HDL_TIME = "'||io_rt_pae.ind_match_hdl_time||'"'
                                                             ||', IND_MATCH_HDL_PSN = "'||io_rt_pae.ind_match_hdl_psn||'"'
                                                             ||', IND_READY = "'||io_rt_pae.ind_ready||'"'
                                                             ||', IND_PACKAGEDATA_DELETED = "'||io_rt_pae.ind_packagedata_deleted||'"'
                                                             ||', IND_PACKAGEDATA_MULTIPLE = "'||io_rt_pae.ind_packagedata_multiple||'"'
                                                             ||', IND_GHOST = "'||io_rt_pae.ind_ghost||'"'
                                                             ||', IND_CHOSEN = "'||io_rt_pae.ind_chosen||'"'
                                                             ||', IND_CONSIDER_MULTI_READ = "'||io_rt_pae.ind_consider_multi_read||'"'
                                                             ||', PTY_ID = "'||io_rt_pae.pty_id||'"'
                                                             ||', PD_ID = "'||io_rt_pae.pd_id||'"'
                                                             ||', BAGDATA_ID = "'||io_rt_pae.bagdata_id||'"'
                                                             ||', NOF_BAGDATA = "'||io_rt_pae.nof_bagdata||'"'
                                                             ||', PID = "'||io_rt_pae.pid||'"'
                                                             ||', LAST_TI_SENT_TIME = "'||io_rt_pae.last_ti_sent_time||'"'
                                                             ||', COUNT_SUSPECT_TI_SENT = "'||io_rt_pae.count_suspect_ti_sent||'"'
                                                             ||', REMATCH_TIME = "'||io_rt_pae.rematch_time||'"'
                                                             ||', DATE_CREATED = "'||io_rt_pae.date_created||'"'
                                                             ||', DATE_LAST_EVENT = "'||io_rt_pae.date_last_event||'"'
                                                             ||', DATE_MODIFIED = "'||io_rt_pae.date_modified||'"'
                                                             ||', DATE_REGISTERED = "'||io_rt_pae.date_registered||'"'
                                                             ||', DATE_DEREGISTERED = "'||io_rt_pae.date_deregistered||'"'
                                                             ||', DATE_OBSOLETE = "'||io_rt_pae.date_obsolete||'"'
                                                             ||', DATE_BAGDATA_UPDATED = "'||io_rt_pae.date_bagdata_updated||'"'                                                              , 1, 4000));
      end;

      viu_module.leave_module( i_module => con_proc );

   exception
      when others
      then
         viu_module.leave_module( i_module     => con_proc
                                , i_debug_info => sqlerrm );

         viu_info.raise_info( i_calling_procedure => con_proc );
   end;                                                          
end pae_insert_row;

function pae_perform_update( i_pae_id   in     pdm_packages.id%type
                           , io_rt_pae  in out pdm_packages%rowtype )
return number
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_perform_update';
begin
   
   declare
      l_rowcount  number := 0;
   begin                                                         
      viu_module.enter_module(i_module => con_proc);

      begin
         update pdm_packages
            set id = io_rt_pae.id
              , pi_id = io_rt_pae.pi_id
              , place_of_birth = io_rt_pae.place_of_birth
              , pte_id = io_rt_pae.pte_id
              , status = io_rt_pae.status
              , ind_match = io_rt_pae.ind_match
              , ind_match_time = io_rt_pae.ind_match_time
              , ind_match_hdl_time = io_rt_pae.ind_match_hdl_time
              , ind_match_hdl_psn = io_rt_pae.ind_match_hdl_psn
              , ind_ready = io_rt_pae.ind_ready
              , ind_packagedata_deleted = io_rt_pae.ind_packagedata_deleted
              , ind_packagedata_multiple = io_rt_pae.ind_packagedata_multiple
              , ind_ghost = io_rt_pae.ind_ghost
              , ind_chosen = io_rt_pae.ind_chosen
              , ind_consider_multi_read = io_rt_pae.ind_consider_multi_read
              , pty_id = io_rt_pae.pty_id
              , pd_id = io_rt_pae.pd_id
              , bagdata_id = io_rt_pae.bagdata_id
              , nof_bagdata = io_rt_pae.nof_bagdata
              , pid = io_rt_pae.pid
              , last_ti_sent_time = io_rt_pae.last_ti_sent_time
              , count_suspect_ti_sent = io_rt_pae.count_suspect_ti_sent
              , rematch_time = io_rt_pae.rematch_time
              , date_created = io_rt_pae.date_created
              , date_last_event = io_rt_pae.date_last_event
              , date_modified = io_rt_pae.date_modified
              , date_registered = io_rt_pae.date_registered
              , date_deregistered = io_rt_pae.date_deregistered
              , date_obsolete = io_rt_pae.date_obsolete
              , date_bagdata_updated = io_rt_pae.date_bagdata_updated
          where id = i_pae_id
      returning id
              , pi_id
              , place_of_birth
              , pte_id
              , status
              , ind_match
              , ind_match_time
              , ind_match_hdl_time
              , ind_match_hdl_psn
              , ind_ready
              , ind_packagedata_deleted
              , ind_packagedata_multiple
              , ind_ghost
              , ind_chosen
              , ind_consider_multi_read
              , pty_id
              , pd_id
              , bagdata_id
              , nof_bagdata
              , pid
              , last_ti_sent_time
              , count_suspect_ti_sent
              , rematch_time
              , date_created
              , date_last_event
              , date_modified
              , date_registered
              , date_deregistered
              , date_obsolete
              , date_bagdata_updated
           into io_rt_pae.id
              , io_rt_pae.pi_id
              , io_rt_pae.place_of_birth
              , io_rt_pae.pte_id
              , io_rt_pae.status
              , io_rt_pae.ind_match
              , io_rt_pae.ind_match_time
              , io_rt_pae.ind_match_hdl_time
              , io_rt_pae.ind_match_hdl_psn
              , io_rt_pae.ind_ready
              , io_rt_pae.ind_packagedata_deleted
              , io_rt_pae.ind_packagedata_multiple
              , io_rt_pae.ind_ghost
              , io_rt_pae.ind_chosen
              , io_rt_pae.ind_consider_multi_read
              , io_rt_pae.pty_id
              , io_rt_pae.pd_id
              , io_rt_pae.bagdata_id
              , io_rt_pae.nof_bagdata
              , io_rt_pae.pid
              , io_rt_pae.last_ti_sent_time
              , io_rt_pae.count_suspect_ti_sent
              , io_rt_pae.rematch_time
              , io_rt_pae.date_created
              , io_rt_pae.date_last_event
              , io_rt_pae.date_modified
              , io_rt_pae.date_registered
              , io_rt_pae.date_deregistered
              , io_rt_pae.date_obsolete
              , io_rt_pae.date_bagdata_updated;

         l_rowcount := sql%rowcount;
      exception
         when others
         then
            viu_info.raise_info( i_ifo_nr            => viu_constant.c_ifo_updatefailed
                               , i_calling_procedure => con_proc
                               , i_severity          => viu_info.c_severity_error
                               , i_info_arguments    => g_con_table_name
                               , i_additional_data   => substr('ID = "'||io_rt_pae.id||'"'
                                                             ||', PI_ID = "'||io_rt_pae.pi_id||'"'
                                                             ||', PLACE_OF_BIRTH = "'||io_rt_pae.place_of_birth||'"'
                                                             ||', PTE_ID = "'||io_rt_pae.pte_id||'"'
                                                             ||', STATUS = "'||io_rt_pae.status||'"'
                                                             ||', IND_MATCH = "'||io_rt_pae.ind_match||'"'
                                                             ||', IND_MATCH_TIME = "'||io_rt_pae.ind_match_time||'"'
                                                             ||', IND_MATCH_HDL_TIME = "'||io_rt_pae.ind_match_hdl_time||'"'
                                                             ||', IND_MATCH_HDL_PSN = "'||io_rt_pae.ind_match_hdl_psn||'"'
                                                             ||', IND_READY = "'||io_rt_pae.ind_ready||'"'
                                                             ||', IND_PACKAGEDATA_DELETED = "'||io_rt_pae.ind_packagedata_deleted||'"'
                                                             ||', IND_PACKAGEDATA_MULTIPLE = "'||io_rt_pae.ind_packagedata_multiple||'"'
                                                             ||', IND_GHOST = "'||io_rt_pae.ind_ghost||'"'
                                                             ||', IND_CHOSEN = "'||io_rt_pae.ind_chosen||'"'
                                                             ||', IND_CONSIDER_MULTI_READ = "'||io_rt_pae.ind_consider_multi_read||'"'
                                                             ||', PTY_ID = "'||io_rt_pae.pty_id||'"'
                                                             ||', PD_ID = "'||io_rt_pae.pd_id||'"'
                                                             ||', BAGDATA_ID = "'||io_rt_pae.bagdata_id||'"'
                                                             ||', NOF_BAGDATA = "'||io_rt_pae.nof_bagdata||'"'
                                                             ||', PID = "'||io_rt_pae.pid||'"'
                                                             ||', LAST_TI_SENT_TIME = "'||io_rt_pae.last_ti_sent_time||'"'
                                                             ||', COUNT_SUSPECT_TI_SENT = "'||io_rt_pae.count_suspect_ti_sent||'"'
                                                             ||', REMATCH_TIME = "'||io_rt_pae.rematch_time||'"'
                                                             ||', DATE_CREATED = "'||io_rt_pae.date_created||'"'
                                                             ||', DATE_LAST_EVENT = "'||io_rt_pae.date_last_event||'"'
                                                             ||', DATE_MODIFIED = "'||io_rt_pae.date_modified||'"'
                                                             ||', DATE_REGISTERED = "'||io_rt_pae.date_registered||'"'
                                                             ||', DATE_DEREGISTERED = "'||io_rt_pae.date_deregistered||'"'
                                                             ||', DATE_OBSOLETE = "'||io_rt_pae.date_obsolete||'"'
                                                             ||', DATE_BAGDATA_UPDATED = "'||io_rt_pae.date_bagdata_updated||'"'                                                              , 1, 4000));
      end;

      viu_module.leave_module( i_module     => con_proc
                             , i_debug_info => to_char(l_rowcount)||' rows updated' );

      return l_rowcount;
   exception
      when others
      then
         viu_module.leave_module( i_module     => con_proc
                                , i_debug_info => sqlerrm );

         viu_info.raise_info( i_calling_procedure => con_proc );
   end;                                                          
end pae_perform_update;

function pae_perform_delete( i_pae_id   in  pdm_packages.id%type )
return boolean
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_perform_delete';
begin
   
   declare
      l_found  boolean := false;
   begin                                                         
      viu_module.enter_module( i_module => con_proc );

      begin
         delete
           from pdm_packages
          where id = i_pae_id;

         l_found := sql%found;
      end;

      viu_module.leave_module( i_module     => con_proc
                             , i_debug_info => case l_found when true then 'found' else 'notfound' end );
      return l_found;
   exception
      when others
      then
         viu_module.leave_module( i_module     => con_proc
                                , i_debug_info => sqlerrm );

         viu_info.raise_info( i_ifo_nr            => viu_constant.c_ifo_deletefailed
                            , i_calling_procedure => con_proc
                            , i_severity          => viu_info.c_severity_error
                            , i_info_arguments    => g_con_table_name
                            , i_additional_data   =>   'ID = "'||i_pae_id||'"' );
   end;                                                          
end pae_perform_delete;

function pae_update_row( i_pae_id   in     pdm_packages.id%type
                       , io_rt_pae  in out pdm_packages%rowtype )
return number
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_update_row';
begin
   declare
      l_rowcount  number := 0;
   begin                                                         
      viu_module.enter_module( i_module => con_proc );

      begin
         
         pae_lock_row( i_pae_id   =>  i_pae_id );

         
         l_rowcount := 
            pae_perform_update( i_pae_id   =>  i_pae_id
                              , io_rt_pae  => io_rt_pae );
      end;

      viu_module.leave_module( i_module     => con_proc
                             , i_debug_info => to_char(l_rowcount) ||' rows updated');
      return l_rowcount;
   exception
      when others
      then
         viu_module.leave_module( i_module     => con_proc
                                , i_debug_info => sqlerrm);

         viu_info.raise_info( i_ifo_nr            => viu_constant.c_ifo_updatefailed
                            , i_calling_procedure => con_proc
                            , i_severity          => viu_info.c_severity_error
                            , i_info_arguments    => g_con_table_name
                            , i_additional_data   => substr('ID = "'||io_rt_pae.id||'"'
                                                          ||', PI_ID = "'||io_rt_pae.pi_id||'"'
                                                          ||', PLACE_OF_BIRTH = "'||io_rt_pae.place_of_birth||'"'
                                                          ||', PTE_ID = "'||io_rt_pae.pte_id||'"'
                                                          ||', STATUS = "'||io_rt_pae.status||'"'
                                                          ||', IND_MATCH = "'||io_rt_pae.ind_match||'"'
                                                          ||', IND_MATCH_TIME = "'||io_rt_pae.ind_match_time||'"'
                                                          ||', IND_MATCH_HDL_TIME = "'||io_rt_pae.ind_match_hdl_time||'"'
                                                          ||', IND_MATCH_HDL_PSN = "'||io_rt_pae.ind_match_hdl_psn||'"'
                                                          ||', IND_READY = "'||io_rt_pae.ind_ready||'"'
                                                          ||', IND_PACKAGEDATA_DELETED = "'||io_rt_pae.ind_packagedata_deleted||'"'
                                                          ||', IND_PACKAGEDATA_MULTIPLE = "'||io_rt_pae.ind_packagedata_multiple||'"'
                                                          ||', IND_GHOST = "'||io_rt_pae.ind_ghost||'"'
                                                          ||', IND_CHOSEN = "'||io_rt_pae.ind_chosen||'"'
                                                          ||', IND_CONSIDER_MULTI_READ = "'||io_rt_pae.ind_consider_multi_read||'"'
                                                          ||', PTY_ID = "'||io_rt_pae.pty_id||'"'
                                                          ||', PD_ID = "'||io_rt_pae.pd_id||'"'
                                                          ||', BAGDATA_ID = "'||io_rt_pae.bagdata_id||'"'
                                                          ||', NOF_BAGDATA = "'||io_rt_pae.nof_bagdata||'"'
                                                          ||', PID = "'||io_rt_pae.pid||'"'
                                                          ||', LAST_TI_SENT_TIME = "'||io_rt_pae.last_ti_sent_time||'"'
                                                          ||', COUNT_SUSPECT_TI_SENT = "'||io_rt_pae.count_suspect_ti_sent||'"'
                                                          ||', REMATCH_TIME = "'||io_rt_pae.rematch_time||'"'
                                                          ||', DATE_CREATED = "'||io_rt_pae.date_created||'"'
                                                          ||', DATE_LAST_EVENT = "'||io_rt_pae.date_last_event||'"'
                                                          ||', DATE_MODIFIED = "'||io_rt_pae.date_modified||'"'
                                                          ||', DATE_REGISTERED = "'||io_rt_pae.date_registered||'"'
                                                          ||', DATE_DEREGISTERED = "'||io_rt_pae.date_deregistered||'"'
                                                          ||', DATE_OBSOLETE = "'||io_rt_pae.date_obsolete||'"'
                                                          ||', DATE_BAGDATA_UPDATED = "'||io_rt_pae.date_bagdata_updated||'"'                                                           , 1, 4000));
   end;                                                          
end pae_update_row;

function pae_delete_row( i_pae_id   in  pdm_packages.id%type )
return boolean
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_delete_row';
begin
   declare
      l_deleted  boolean := false;
   begin                                                         
      viu_module.enter_module( i_module => con_proc );

      begin
         
         pae_lock_row( i_pae_id   =>  i_pae_id );

         
         l_deleted := pae_perform_delete( i_pae_id   =>  i_pae_id );
      end;

      viu_module.leave_module( i_module => con_proc );

      return l_deleted;
   exception
      when others
      then
         viu_module.leave_module( i_module     => con_proc
                                , i_debug_info => sqlerrm );

         viu_info.raise_info( i_ifo_nr            => viu_constant.c_ifo_deletefailed
                            , i_calling_procedure => con_proc
                            , i_severity          => viu_info.c_severity_error
                            , i_info_arguments    => g_con_table_name
                            , i_additional_data   =>   'ID = "'||i_pae_id||'"' );
   end;                                                          
end pae_delete_row;

function pae_seq1_nextval
return pdm_packages.id%type
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_seq1_nextval';
   l_pae_id  pdm_packages.id%type;
begin
   begin                                                         
      viu_module.enter_module( i_module => con_proc );

      begin
         select pdm_pae_seq1.nextval 
           into l_pae_id
           from dual;
      end;

      viu_module.leave_module( i_module => con_proc );

      return l_pae_id;
   exception
      when others
      then
         viu_module.leave_module( i_module => con_proc
                                , i_debug_info => sqlerrm );

         viu_info.raise_info( i_calling_procedure => con_proc );
   end;                                                          
end pae_seq1_nextval;


end pdm_pae_tapi_pck;
/