create or replace PACKAGE lm_pae_tapi_pck
IS
-- Table API package for table lm_packages
-- Generated by VI TAPI generator version 6.2  (TAPI generated 03-Jan-2022  05:41:13)

-- Generated global constants
g_con_pack        CONSTANT     VARCHAR2(30) := 'LM_PAE_TAPI_PCK';
g_con_table_name  CONSTANT     VARCHAR2(61) := 'LM_PACKAGES';
g_lock_conflicts  PLS_INTEGER := 0;


FUNCTION pae_select_row( i_pae_PID   IN  lm_packages.PID%TYPE
                       , o_rt_pae   OUT lm_packages%ROWTYPE )
RETURN BOOLEAN
;

FUNCTION pae_select_row_upd( i_pae_PID   IN  lm_packages.PID%TYPE
                           , o_rt_pae   OUT lm_packages%ROWTYPE )
RETURN BOOLEAN
;

PROCEDURE pae_lock_row( i_pae_PID   IN  lm_packages.PID%TYPE )
;

PROCEDURE pae_lock_row_nowait( i_pae_PID   IN  lm_packages.PID%TYPE )
;

PROCEDURE pae_insert_row ( io_rt_pae  IN OUT lm_packages%ROWTYPE )
;

FUNCTION pae_update_row( i_pae_PID   IN     lm_packages.PID%TYPE
                       , io_rt_pae  IN OUT lm_packages%ROWTYPE )
RETURN NUMBER
;

FUNCTION pae_delete_row( i_pae_PID   IN  lm_packages.PID%TYPE )
RETURN BOOLEAN
;

FUNCTION pae_seq1_nextval
RETURN lm_packages.PID%TYPE
;


END lm_pae_tapi_pck;
/




package body lm_pae_tapi_pck
is




function pae_select_row( i_pae_pid   in  lm_packages.pid%type
                       , o_rt_pae   out lm_packages%rowtype )
return boolean
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_select_row';
   l_found                boolean      := false;
begin
   declare
      cursor c_pae ( i_pae_pid   in  lm_packages.pid%type )
      is 
           select *
             from lm_packages pae
            where pae.pid = i_pae_pid ;
   begin                                                         
      viu_module.enter_module( i_module => con_proc );

      begin
         open c_pae( i_pae_pid => i_pae_pid );
         fetch c_pae into o_rt_pae;
         l_found := c_pae%found;
         close c_pae;
      end;

      viu_module.leave_module( i_module     => con_proc 
                             , i_debug_info => case l_found when true then 'found' else 'notfound' end );

      return l_found;

   exception
      when others
      then
         if c_pae%isopen
         then
            close c_pae;
         end if;

         viu_module.leave_module( i_module     => con_proc
                                , i_debug_info => sqlerrm );

         viu_info.raise_info( i_calling_procedure => con_proc );
   end;                                                          
end pae_select_row;

function pae_select_row_upd( i_pae_pid   in  lm_packages.pid%type
                           , o_rt_pae   out lm_packages%rowtype )
return boolean
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_select_row_upd';
   l_found                boolean      := false;

   cursor c_pae ( i_pae_pid   in  lm_packages.pid%type )
   is
           select *
             from lm_packages pae
            where pae.pid = i_pae_pid 
         for update;
begin
   viu_module.enter_module( i_module => con_proc );

   
   open c_pae( i_pae_pid => i_pae_pid );
   fetch c_pae into o_rt_pae;
   l_found := c_pae%found;
   close c_pae;

   viu_module.leave_module( i_module     => con_proc
                          , i_debug_info => case l_found when true then 'found' else 'notfound' end );

   return l_found;

exception
   when others
   then
      if c_pae%isopen
      then
         close c_pae;
      end if;

      viu_module.leave_module( i_module     => con_proc
                             , i_debug_info => sqlerrm );

      viu_info.raise_info( i_calling_procedure => con_proc );

end pae_select_row_upd;

procedure pae_lock_row( i_pae_pid   in  lm_packages.pid%type )
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_lock_row';
begin
  declare
     cursor c_pae ( i_pae_pid   in  lm_packages.pid%type )
     is
             select ''
               from lm_packages pae
              where pae.pid = i_pae_pid 
         for update;

   begin                                                         
      viu_module.enter_module(i_module => con_proc);

      begin
         
         if i_pae_pid is not null
         then
            begin
                
                pae_lock_row_nowait( i_pae_pid => i_pae_pid );
            exception
               when viu_constant.exc_lockfailed
               then
                  
                  g_lock_conflicts := g_lock_conflicts + 1;

                  
                  viu_info.reset_package_variables;

                  
                  open c_pae( i_pae_pid => i_pae_pid );
                  close c_pae;
               end;
         end if;
      end;

      viu_module.leave_module( i_module => con_proc );

   exception
      when others
      then
         if c_pae%isopen
         then
            close c_pae;
         end if;

         viu_module.leave_module( i_module     => con_proc
                                , i_debug_info => sqlerrm );

         viu_info.raise_info(i_calling_procedure => con_proc );
   end;                                                          
end pae_lock_row;

procedure pae_lock_row_nowait( i_pae_pid   in  lm_packages.pid%type )
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_lock_row_nowait';
begin
   declare
      cursor c_pae ( i_pae_pid   in  lm_packages.pid%type )
      is
              select ''
                from lm_packages pae
               where pae.pid = i_pae_pid 
          for update nowait;

   begin                                                         
      viu_module.enter_module(i_module => con_proc);

      begin

         
         if i_pae_pid is not null
         then
            
            open c_pae( i_pae_pid => i_pae_pid );

            close c_pae;
         end if;
      end;

      viu_module.leave_module( i_module => con_proc );

   exception
      when others
      then
        if c_pae%isopen
        then
           close c_pae;
        end if;

        viu_module.leave_module( i_module     => con_proc
                               , i_debug_info => sqlerrm );

        viu_info.raise_info( i_ifo_nr            => viu_constant.c_ifo_lockfailed
                           , i_calling_procedure => con_proc
                           , i_severity          => viu_info.c_severity_error
                           , i_info_arguments    => g_con_table_name
                           , i_additional_data   =>   'PID = "'||i_pae_pid||'"' );
   end;                                                          
end pae_lock_row_nowait;

function pae_perform_update( i_pae_pid   in     lm_packages.pid%type
                           , io_rt_pae  in out lm_packages%rowtype )
return number
;

function pae_perform_delete( i_pae_pid   in  lm_packages.pid%type )
return boolean
;

procedure pae_insert_row ( io_rt_pae  in out lm_packages%rowtype )
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_insert_row';
begin
   begin                                                         
      viu_module.enter_module(i_module => con_proc);

      
      begin
         insert into lm_packages( pid
                                , pss_id
                                , priority_indicator
                                , ind_in_time
                                , date_created
                                , date_modified
                                , rgp_id
                                , rst_id
                                , pty_id
                                , pon_id
                                , pcm_name
                                , lic
                                , lpc
                                , carrier
                                , lpc_extension
                                , bid
                                , bid_extension
                                , expected_time_to_arrive
                                , batch_id
                                , std
                                , arrived_at_pon
                                , ind_suspended_deregistration )
              values ( io_rt_pae.pid
                     , io_rt_pae.pss_id
                     , io_rt_pae.priority_indicator
                     , io_rt_pae.ind_in_time
                     , io_rt_pae.date_created
                     , io_rt_pae.date_modified
                     , io_rt_pae.rgp_id
                     , io_rt_pae.rst_id
                     , io_rt_pae.pty_id
                     , io_rt_pae.pon_id
                     , io_rt_pae.pcm_name
                     , io_rt_pae.lic
                     , io_rt_pae.lpc
                     , io_rt_pae.carrier
                     , io_rt_pae.lpc_extension
                     , io_rt_pae.bid
                     , io_rt_pae.bid_extension
                     , io_rt_pae.expected_time_to_arrive
                     , io_rt_pae.batch_id
                     , io_rt_pae.std
                     , io_rt_pae.arrived_at_pon
                     , io_rt_pae.ind_suspended_deregistration )
           returning pid
                   , pss_id
                   , priority_indicator
                   , ind_in_time
                   , date_created
                   , date_modified
                   , rgp_id
                   , rst_id
                   , pty_id
                   , pon_id
                   , pcm_name
                   , lic
                   , lpc
                   , carrier
                   , lpc_extension
                   , bid
                   , bid_extension
                   , expected_time_to_arrive
                   , batch_id
                   , std
                   , arrived_at_pon
                   , ind_suspended_deregistration
                into io_rt_pae.pid
                   , io_rt_pae.pss_id
                   , io_rt_pae.priority_indicator
                   , io_rt_pae.ind_in_time
                   , io_rt_pae.date_created
                   , io_rt_pae.date_modified
                   , io_rt_pae.rgp_id
                   , io_rt_pae.rst_id
                   , io_rt_pae.pty_id
                   , io_rt_pae.pon_id
                   , io_rt_pae.pcm_name
                   , io_rt_pae.lic
                   , io_rt_pae.lpc
                   , io_rt_pae.carrier
                   , io_rt_pae.lpc_extension
                   , io_rt_pae.bid
                   , io_rt_pae.bid_extension
                   , io_rt_pae.expected_time_to_arrive
                   , io_rt_pae.batch_id
                   , io_rt_pae.std
                   , io_rt_pae.arrived_at_pon
                   , io_rt_pae.ind_suspended_deregistration;

      exception
         when others
         then
            viu_info.raise_info( i_ifo_nr            => viu_constant.c_ifo_insertfailed
                               , i_calling_procedure => con_proc
                               , i_severity          => viu_info.c_severity_error
                               , i_info_arguments    => g_con_table_name
                               , i_additional_data   => substr('PID = "'||io_rt_pae.pid||'"'
                                                             ||', PSS_ID = "'||io_rt_pae.pss_id||'"'
                                                             ||', PRIORITY_INDICATOR = "'||io_rt_pae.priority_indicator||'"'
                                                             ||', IND_IN_TIME = "'||io_rt_pae.ind_in_time||'"'
                                                             ||', DATE_CREATED = "'||io_rt_pae.date_created||'"'
                                                             ||', DATE_MODIFIED = "'||io_rt_pae.date_modified||'"'
                                                             ||', RGP_ID = "'||io_rt_pae.rgp_id||'"'
                                                             ||', RST_ID = "'||io_rt_pae.rst_id||'"'
                                                             ||', PTY_ID = "'||io_rt_pae.pty_id||'"'
                                                             ||', PON_ID = "'||io_rt_pae.pon_id||'"'
                                                             ||', PCM_NAME = "'||io_rt_pae.pcm_name||'"'
                                                             ||', LIC = "'||io_rt_pae.lic||'"'
                                                             ||', LPC = "'||io_rt_pae.lpc||'"'

                                                             ||', LPC_EXTENSION = "'||io_rt_pae.lpc_extension||'"'
                                                             ||', BID = "'||io_rt_pae.bid||'"'
                                                             ||', BID_EXTENSION = "'||io_rt_pae.bid_extension||'"'
                                                             ||', EXPECTED_TIME_TO_ARRIVE = "'||io_rt_pae.expected_time_to_arrive||'"'
                                                             ||', BATCH_ID = "'||io_rt_pae.batch_id||'"'
                                                             ||', STD = "'||io_rt_pae.std||'"'
                                                             ||', ARRIVED_AT_PON = "'||io_rt_pae.arrived_at_pon||'"'
                                                             ||', IND_SUSPENDED_DEREGISTRATION = "'||io_rt_pae.ind_suspended_deregistration||'"'                                                              , 1, 4000));
      end;

      viu_module.leave_module( i_module => con_proc );

   exception
      when others
      then
         viu_module.leave_module( i_module     => con_proc
                                , i_debug_info => sqlerrm );

         viu_info.raise_info( i_calling_procedure => con_proc );
   end;                                                          
end pae_insert_row;

function pae_perform_update( i_pae_pid   in     lm_packages.pid%type
                           , io_rt_pae  in out lm_packages%rowtype )
return number
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_perform_update';
begin
   
   declare
      l_rowcount  number := 0;
   begin                                                         
      viu_module.enter_module(i_module => con_proc);

      begin
         update lm_packages
            set pid = io_rt_pae.pid
              , pss_id = io_rt_pae.pss_id
              , priority_indicator = io_rt_pae.priority_indicator
              , ind_in_time = io_rt_pae.ind_in_time
              , date_created = io_rt_pae.date_created
              , date_modified = io_rt_pae.date_modified
              , rgp_id = io_rt_pae.rgp_id
              , rst_id = io_rt_pae.rst_id
              , pty_id = io_rt_pae.pty_id
              , pon_id = io_rt_pae.pon_id
              , pcm_name = io_rt_pae.pcm_name
              , lic = io_rt_pae.lic
              , lpc = io_rt_pae.lpc
              , carrier = io_rt_pae.carrier
              , lpc_extension = io_rt_pae.lpc_extension
              , bid = io_rt_pae.bid
              , bid_extension = io_rt_pae.bid_extension
              , expected_time_to_arrive = io_rt_pae.expected_time_to_arrive
              , batch_id = io_rt_pae.batch_id
              , std = io_rt_pae.std
              , arrived_at_pon = io_rt_pae.arrived_at_pon
              , ind_suspended_deregistration = io_rt_pae.ind_suspended_deregistration
          where pid = i_pae_pid
      returning pid
              , pss_id
              , priority_indicator
              , ind_in_time
              , date_created
              , date_modified
              , rgp_id
              , rst_id
              , pty_id
              , pon_id
              , pcm_name
              , lic
              , lpc
              , carrier
              , lpc_extension
              , bid
              , bid_extension
              , expected_time_to_arrive
              , batch_id
              , std
              , arrived_at_pon
              , ind_suspended_deregistration
           into io_rt_pae.pid
              , io_rt_pae.pss_id
              , io_rt_pae.priority_indicator
              , io_rt_pae.ind_in_time
              , io_rt_pae.date_created
              , io_rt_pae.date_modified
              , io_rt_pae.rgp_id
              , io_rt_pae.rst_id
              , io_rt_pae.pty_id
              , io_rt_pae.pon_id
              , io_rt_pae.pcm_name
              , io_rt_pae.lic
              , io_rt_pae.lpc
              , io_rt_pae.carrier
              , io_rt_pae.lpc_extension
              , io_rt_pae.bid
              , io_rt_pae.bid_extension
              , io_rt_pae.expected_time_to_arrive
              , io_rt_pae.batch_id
              , io_rt_pae.std
              , io_rt_pae.arrived_at_pon
              , io_rt_pae.ind_suspended_deregistration;

         l_rowcount := sql%rowcount;
      exception
         when others
         then
            viu_info.raise_info( i_ifo_nr            => viu_constant.c_ifo_updatefailed
                               , i_calling_procedure => con_proc
                               , i_severity          => viu_info.c_severity_error
                               , i_info_arguments    => g_con_table_name
                               , i_additional_data   => substr('PID = "'||io_rt_pae.pid||'"'
                                                             ||', PSS_ID = "'||io_rt_pae.pss_id||'"'
                                                             ||', PRIORITY_INDICATOR = "'||io_rt_pae.priority_indicator||'"'
                                                             ||', IND_IN_TIME = "'||io_rt_pae.ind_in_time||'"'
                                                             ||', DATE_CREATED = "'||io_rt_pae.date_created||'"'
                                                             ||', DATE_MODIFIED = "'||io_rt_pae.date_modified||'"'
                                                             ||', RGP_ID = "'||io_rt_pae.rgp_id||'"'
                                                             ||', RST_ID = "'||io_rt_pae.rst_id||'"'
                                                             ||', PTY_ID = "'||io_rt_pae.pty_id||'"'
                                                             ||', PON_ID = "'||io_rt_pae.pon_id||'"'
                                                             ||', PCM_NAME = "'||io_rt_pae.pcm_name||'"'
                                                             ||', LIC = "'||io_rt_pae.lic||'"'
                                                             ||', LPC = "'||io_rt_pae.lpc||'"'

                                                             ||', LPC_EXTENSION = "'||io_rt_pae.lpc_extension||'"'
                                                             ||', BID = "'||io_rt_pae.bid||'"'
                                                             ||', BID_EXTENSION = "'||io_rt_pae.bid_extension||'"'
                                                             ||', EXPECTED_TIME_TO_ARRIVE = "'||io_rt_pae.expected_time_to_arrive||'"'
                                                             ||', BATCH_ID = "'||io_rt_pae.batch_id||'"'
                                                             ||', STD = "'||io_rt_pae.std||'"'
                                                             ||', ARRIVED_AT_PON = "'||io_rt_pae.arrived_at_pon||'"'
                                                             ||', IND_SUSPENDED_DEREGISTRATION = "'||io_rt_pae.ind_suspended_deregistration||'"'                                                              , 1, 4000));
      end;

      viu_module.leave_module( i_module     => con_proc
                             , i_debug_info => to_char(l_rowcount)||' rows updated' );

      return l_rowcount;
   exception
      when others
      then
         viu_module.leave_module( i_module     => con_proc
                                , i_debug_info => sqlerrm );

         viu_info.raise_info( i_calling_procedure => con_proc );
   end;                                                          
end pae_perform_update;

function pae_perform_delete( i_pae_pid   in  lm_packages.pid%type )
return boolean
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_perform_delete';
begin
   
   declare
      l_found  boolean := false;
   begin                                                         
      viu_module.enter_module( i_module => con_proc );

      begin
         delete
           from lm_packages
          where pid = i_pae_pid;

         l_found := sql%found;
      end;

      viu_module.leave_module( i_module     => con_proc
                             , i_debug_info => case l_found when true then 'found' else 'notfound' end );
      return l_found;
   exception
      when others
      then
         viu_module.leave_module( i_module     => con_proc
                                , i_debug_info => sqlerrm );

         viu_info.raise_info( i_ifo_nr            => viu_constant.c_ifo_deletefailed
                            , i_calling_procedure => con_proc
                            , i_severity          => viu_info.c_severity_error
                            , i_info_arguments    => g_con_table_name
                            , i_additional_data   =>   'PID = "'||i_pae_pid||'"' );
   end;                                                          
end pae_perform_delete;

function pae_update_row( i_pae_pid   in     lm_packages.pid%type
                       , io_rt_pae  in out lm_packages%rowtype )
return number
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_update_row';
begin
   declare
      l_rowcount  number := 0;
   begin                                                         
      viu_module.enter_module( i_module => con_proc );

      begin
         
         pae_lock_row( i_pae_pid   =>  i_pae_pid );

         
         l_rowcount := 
            pae_perform_update( i_pae_pid   =>  i_pae_pid
                              , io_rt_pae  => io_rt_pae );
      end;

      viu_module.leave_module( i_module     => con_proc
                             , i_debug_info => to_char(l_rowcount) ||' rows updated');
      return l_rowcount;
   exception
      when others
      then
         viu_module.leave_module( i_module     => con_proc
                                , i_debug_info => sqlerrm);

         viu_info.raise_info( i_ifo_nr            => viu_constant.c_ifo_updatefailed
                            , i_calling_procedure => con_proc
                            , i_severity          => viu_info.c_severity_error
                            , i_info_arguments    => g_con_table_name
                            , i_additional_data   => substr('PID = "'||io_rt_pae.pid||'"'
                                                          ||', PSS_ID = "'||io_rt_pae.pss_id||'"'
                                                          ||', PRIORITY_INDICATOR = "'||io_rt_pae.priority_indicator||'"'
                                                          ||', IND_IN_TIME = "'||io_rt_pae.ind_in_time||'"'
                                                          ||', DATE_CREATED = "'||io_rt_pae.date_created||'"'
                                                          ||', DATE_MODIFIED = "'||io_rt_pae.date_modified||'"'
                                                          ||', RGP_ID = "'||io_rt_pae.rgp_id||'"'
                                                          ||', RST_ID = "'||io_rt_pae.rst_id||'"'
                                                          ||', PTY_ID = "'||io_rt_pae.pty_id||'"'
                                                          ||', PON_ID = "'||io_rt_pae.pon_id||'"'
                                                          ||', PCM_NAME = "'||io_rt_pae.pcm_name||'"'
                                                          ||', LIC = "'||io_rt_pae.lic||'"'
                                                          ||', LPC = "'||io_rt_pae.lpc||'"'

                                                          ||', LPC_EXTENSION = "'||io_rt_pae.lpc_extension||'"'
                                                          ||', BID = "'||io_rt_pae.bid||'"'
                                                          ||', BID_EXTENSION = "'||io_rt_pae.bid_extension||'"'
                                                          ||', EXPECTED_TIME_TO_ARRIVE = "'||io_rt_pae.expected_time_to_arrive||'"'
                                                          ||', BATCH_ID = "'||io_rt_pae.batch_id||'"'
                                                          ||', STD = "'||io_rt_pae.std||'"'
                                                          ||', ARRIVED_AT_PON = "'||io_rt_pae.arrived_at_pon||'"'
                                                          ||', IND_SUSPENDED_DEREGISTRATION = "'||io_rt_pae.ind_suspended_deregistration||'"'                                                           , 1, 4000));
   end;                                                          
end pae_update_row;

function pae_delete_row( i_pae_pid   in  lm_packages.pid%type )
return boolean
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_delete_row';
begin
   declare
      l_deleted  boolean := false;
   begin                                                         
      viu_module.enter_module( i_module => con_proc );

      begin
         
         pae_lock_row( i_pae_pid   =>  i_pae_pid );

         
         l_deleted := pae_perform_delete( i_pae_pid   =>  i_pae_pid );
      end;

      viu_module.leave_module( i_module => con_proc );

      return l_deleted;
   exception
      when others
      then
         viu_module.leave_module( i_module     => con_proc
                                , i_debug_info => sqlerrm );

         viu_info.raise_info( i_ifo_nr            => viu_constant.c_ifo_deletefailed
                            , i_calling_procedure => con_proc
                            , i_severity          => viu_info.c_severity_error
                            , i_info_arguments    => g_con_table_name
                            , i_additional_data   =>   'PID = "'||i_pae_pid||'"' );
   end;                                                          
end pae_delete_row;

function pae_seq1_nextval
return lm_packages.pid%type
is
   con_proc  constant     varchar2(61) := g_con_pack || '.pae_seq1_nextval';
   l_pae_pid  lm_packages.pid%type;
begin
   begin                                                         
      viu_module.enter_module( i_module => con_proc );

      begin
         select lm_pae_seq1.nextval 
           into l_pae_pid
           from dual;
      end;

      viu_module.leave_module( i_module => con_proc );

      return l_pae_pid;
   exception
      when others
      then
         viu_module.leave_module( i_module => con_proc
                                , i_debug_info => sqlerrm );

         viu_info.raise_info( i_calling_procedure => con_proc );
   end;                                                          
end pae_seq1_nextval;


end lm_pae_tapi_pck;
/