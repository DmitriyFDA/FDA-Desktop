procedure showxmlmessagestore(p_period in varchar2 default ' ',  p_msgn in varchar2 default ' ') is
v_msg      varchar2(32767);
v_dt1      varchar2(   30) := to_char(sysdate, 'YYYYMMDD.HH24');
v_dt2      varchar2(   30) := to_char(sysdate, 'YYYYMMDD.HH24');
v_sdate date;
v_edate date;
v_rootnode varchar2(  100);
transdrilldown varchar2(2000) := '';
subtitle varchar2(2000) := '';
type xmlmsnoclobsrectyp is record (
  idevent xml_message_store.idevent%type,
  insertts xml_message_store.insertts%type,
  eventts xml_message_store.eventts%type,
  rootnode xml_message_store.rootnode%type,
  returncode xml_message_store.returncode%type,
  errormessage xml_message_store.errormessage%type,
  duration xml_message_store.duration%type );
type xmlms_rec_arr is table of xmlmsnoclobsrectyp;
l_xmlms_rec_array xmlms_rec_arr;
begin
  v_msg := 'Calculating start date time. ';
  v_dt1 := substr(p_period, 1, 11)||':00';
  v_sdate := to_date(v_dt1,'YYYYMMDD.HH24:MI');
  v_msg := 'Calculating end date time. ';
  v_dt2 := substr(p_period, 13, 11)||':00';
  v_edate := to_date(v_dt2,'YYYYMMDD.HH24:MI');
  
  subtitle := 'XML Messages received between '||v_dt1||' and '||v_dt2;

  v_rootnode := trim(p_msgn);
  if v_rootnode is not null then
    select idevent, insertts, eventts, rootnode, returncode, errormessage, duration
    bulk collect into l_xmlms_rec_array
    from xml_message_store where insertts between v_sdate and v_edate
    and rootnode = v_rootnode
    and rownum <= 1000
    order by idevent desc;
    subtitle := subtitle||', Rootnode '||v_rootnode;
  else
    select idevent, insertts, eventts, rootnode, returncode, errormessage, duration
    bulk collect into l_xmlms_rec_array
    from xml_message_store where insertts between v_sdate and v_edate
    and rownum <= 1000
    order by idevent desc;
  end if;

  subtitle := subtitle||'.<br>Database table name: XML_MESSAGE_STORE. ';
  if l_xmlms_rec_array.count >= 1000 then
    subtitle := subtitle||'<b>Output has been limited to 1000 records.</b>';
  else
    subtitle := subtitle||'<b>'||to_char(l_xmlms_rec_array.count)||' records.</b>';
  end if;

  htp.print('<p>'||subtitle||'</p>');
  htp.print('<TABLE  border=5 bordercolor="#8B4513" bgcolor="#FFEBCD" cellspacing=2 cellpadding=1>
<TR>
<TH>ID</TH>
<TH>Insert Time Stamp</TH>
<TH>Event Time Stamp</TH>
<TH>Root Node</TH>
<TH>Message</TH>
<TH>Return Code</TH>
<TH>ERROR Message</TH>
<TH>Duration</TH>
</TR>');

  for i in 1..l_xmlms_rec_array.count loop
    htp.print('<TR>
<TD ALIGN="LEFT">'||to_char(l_xmlms_rec_array(i).idevent)||'</TD>
<TD ALIGN="LEFT">'||ts2str(l_xmlms_rec_array(i).insertts)||'</TD>
<TD ALIGN="LEFT">'||ts2str(l_xmlms_rec_array(i).eventts)||'</TD>
<TD ALIGN="LEFT">'||l_xmlms_rec_array(i).rootnode||'</TD>
<TD> <BUTTON onClick="document.location=''DrillDownXMLMessage?p_id='||to_char(l_xmlms_rec_array(i).idevent)||''';">Download</BUTTON--> </TD>
<TD ALIGN="LEFT">'||to_char(l_xmlms_rec_array(i).returncode)||'</TD>
<TD ALIGN="LEFT">'||l_xmlms_rec_array(i).errormessage||'</TD>
<TD ALIGN="LEFT">'||to_char(l_xmlms_rec_array(i).duration)||'</TD>
</TR>');
  end loop;
  htp.print('</TABLE>');

exception when others then
  v_msg := v_msg||'<br>'||sqlerrm||'<br>'||replace(dbms_utility.format_error_backtrace, chr(10), '<br>');
  htp.print(v_msg||'<br><br>');
end;
/