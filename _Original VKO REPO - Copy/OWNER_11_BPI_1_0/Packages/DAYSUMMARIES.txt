create or replace package DAYSUMMARIES is
G_CON_PACKAGE CONSTANT VARCHAR2(30) := 'Daysummaries';

procedure raise_fatal_error(p_con_proc_name varchar2, p_msg varchar2);
procedure insert_day_summary(p_date_string varchar2, p_day_summary_text varchar2);
function get_day_summary(p_date_string varchar2) return varchar2;
function get_updatets_summary(p_date_string varchar2) return varchar2;

end DAYSUMMARIES;
/




package body daysummaries is

procedure raise_fatal_error(p_con_proc_name varchar2, p_msg varchar2) is
begin

  viu_info.operator_info( i_ifo_nr       => viu_constant.c_ifo_bpidebuginfo
                        , i_calling_procedure      => p_con_proc_name
                        , i_severity               => viu_info.c_severity_error
                        , i_info_arguments         => to_char(sys_extract_utc(systimestamp), 'YYYY-MM-DD HH24:MI:SS.FF6')
                        , i_additional_data        => p_msg);
                        
  viu_module.leave_module(i_module => p_con_proc_name);

  viu_info.raise_info( i_ifo_nr             => viu_constant.c_ifo_bpidebuginfo
                     , i_calling_procedure  => p_con_proc_name
                     , i_severity           => viu_info.c_severity_error
                     , i_info_arguments     => to_char(sys_extract_utc(systimestamp), 'YYYY-MM-DD HH24:MI:SS.FF6')
                     , i_additional_data    => p_msg);
end;


function get_day_summary(p_date_string varchar2) return varchar2 is
l_dt date;
l_periodid number;
l_text fact_day_summaries.day_summary_text%type;
begin
  l_dt := to_date(p_date_string, 'YYYY-MM-DD');
  l_periodid := period.periodid(l_dt, 'D1');
  begin
    select day_summary_text into l_text
    from fact_day_summaries where d1_periodid = l_periodid;
  exception when others then
    l_text := '';
  end;
  return l_text;
end;



function get_updatets_summary(p_date_string varchar2) return varchar2 is
l_dt date;
l_periodid number;
l_text varchar2(30);
begin
  l_dt := to_date(p_date_string, 'YYYY-MM-DD');
  l_periodid := period.periodid(l_dt, 'D1');
  begin
    select to_char(period.gmt2local(updatets), 'dd Mon yyyy HH24:mi:ss') into l_text
    from fact_day_summaries where d1_periodid = l_periodid;
  exception when others then
    l_text := '';
  end;
  return l_text;
end;

procedure insert_day_summary(p_date_string varchar2, p_day_summary_text varchar2) is
l_con_proc_name constant varchar2(61) := g_con_package||'.insert_day_summary';
l_msg viu_info_logs.additional_data%type;
l_dt date;
l_periodid number;
begin
  viu_module.enter_module( i_module          => l_con_proc_name
                         , i_debug_info      => to_char(sys_extract_utc(systimestamp))
                         );

  begin
    l_dt := to_date(p_date_string, 'YYYY-MM-DD');
    l_periodid := period.periodid(l_dt, 'D1');
  exception when others then
    raise_fatal_error(l_con_proc_name, 'Bad date. Must be formatted as YYYY-MM-DD. ('||p_date_string||')');
  end;
  begin
    if trim(p_day_summary_text) is null then
      delete from fact_day_summaries where d1_periodid = l_periodid;
    else
      begin
        insert into fact_day_summaries
        ( d1_periodid
        , eventts
        , insertts
        , updatets
        , day_summary_text )
        values
        ( l_periodid
        , to_timestamp(l_dt)
        , sys_extract_utc(systimestamp)
        , sys_extract_utc(systimestamp)
        , p_day_summary_text);
      exception when dup_val_on_index then
        update fact_day_summaries
        set updatets = sys_extract_utc(systimestamp)
        ,   day_summary_text = p_day_summary_text
        where d1_periodid = l_periodid;
        if sql%rowcount <> 1 then
          raise_fatal_error(l_con_proc_name, 'UPDATE FACT_DAY_SUMMARIES FAILED. '||p_date_string||', D1_PERIODID='||to_char(l_periodid));
        end if;
      end;
    end if;
    commit;

    viu_info.operator_info( i_ifo_nr                 => viu_constant.c_ifo_bpidebuginfo
                          , i_calling_procedure      => l_con_proc_name
                          , i_severity               => viu_info.c_severity_notification
                          , i_info_arguments         => null
                          , i_additional_data        => l_con_proc_name||' finished successfully. Processed Day Summary '||p_date_string||'.'
                          );

  exception when others then
    l_msg := substr(l_con_proc_name||', ERROR: '||sqlerrm||chr(10)||dbms_utility.format_error_backtrace,1,4000);
    viu_info.operator_info(viu_constant.c_ifo_bpidebuginfo,l_con_proc_name, viu_info.c_severity_error, null, l_msg);
  end;
  viu_module.leave_module( i_module      => l_con_proc_name );
end;


end daysummaries;
/